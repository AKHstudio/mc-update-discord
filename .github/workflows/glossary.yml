name: 'add glossary'

on:
    workflow_dispatch:
    push:
        paths:
            - 'glossary.csv' # glossary.csvが変更されたときに実行される
        branches:
            - main # mainブランチに変更があった場合のみ実行

jobs:
    run:
        runs-on: ubuntu-latest
        env:
            DEEPL_API_KEY: ${{ secrets.DEEPL_API_KEY }}
            GLOSSARY_ID: ${{ vars.GLOSSARY_ID }}
        steps:
            # Checkout the repository
            - name: 'Checkout'
              uses: actions/checkout@v4

            # Setup Python
            - name: 'Setup Python'
              uses: actions/setup-python@v5
              with:
                  python-version: '3.12.8'

            # cache the virtual environment
            - name: Cache virtual environment
              id: cache-venv-glossary
              uses: actions/cache@v4
              with:
                  path: .venv
                  key: ${{ runner.os }}-venv-glossary
                  restore-keys: |
                      ${{ runner.os }}-venv-glossary

            # Install dependencies
            - name: Set up virtual environment
              if: steps.cache-venv-glossary.outputs.cache-hit != 'true'
              run: |
                  python -m venv .venv
                  source .venv/bin/activate
                  pip install -U requests python-dotenv
                  deactivate

            - name: Run add_glossary.py
              run: |
                  source .venv/bin/activate
                  python glossary.py
                  deactivate

            # set vars.GLOSSARY_ID
            - name: Set vars.GLOSSARY_ID and vars.OLD_GLOSSARY_CSV
              run: |
                  gh variable set GLOSSARY_ID --body "$(cat glossary_id.txt)"
              env:
                  GH_TOKEN: ${{ secrets.GH_TOKEN }}

            # Get new glossary
            - name: Get new glossary info
              run: |
                  RESPONSE=$(curl -s -w "\n%{http_code}"\
                    -X GET \
                    -H "Authorization: DeepL-Auth-Key ${{ secrets.DEEPL_API_KEY}}" \
                    -H "Content-Type: application/json" \
                    "https://api-free.deepl.com/v2/glossaries")

                  JSON_RESPONSE=$(echo "$RESPONSE" | sed '$d')
                  STATUS_CODE=$(echo "$RESPONSE" | tail -n1)

                  echo "=== API Response (Raw) ==="
                  echo "$RESPONSE"

                  echo "=== Extracted JSON ==="
                  echo "$JSON_RESPONSE" | jq .

                  echo "=== HTTP Status Code ==="
                  echo "$STATUS_CODE"

                  echo "| name | status | id | source_lang | target_lang | entry_count |" >> $GITHUB_STEP_SUMMARY
                  echo "|------|--------|----|-------------|-------------|-------------|" >> $GITHUB_STEP_SUMMARY

                  echo "$JSON_RESPONSE" | jq -r --arg status "$STATUS_CODE" '
                      .glossaries[] | 
                      "| \(.name) | \($status) | \(.glossary_id) | \(.source_lang) | \(.target_lang) | \(.entry_count) |"' >> $GITHUB_STEP_SUMMARY
              continue-on-error: true
